// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model Company {
  id Int @id @default(autoincrement())
  user_id Int
  user User @relation(fields: [user_id], references: [id])
  freight_registers FreightRegistration[]

  @@map("company")
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String
  password String
  profile_type String
  company_users Company[]
  delivery_person_users DeliveryPerson[]

  @@map("users")
}

model DeliveryPerson {
  id Int @id @default(autoincrement())
  user_id Int
  user User @relation(fields: [user_id], references: [id])
  freight_registers FreightRegistration[]
  vehicle_registers VehicleRegistration[]

  @@map("delivery_person")
}

model Vehicle {
  id Int @id @default(autoincrement())
  vehicle_type String
  classif_weight Int
  vehicle_registers VehicleRegistration[]

    @@map("vehicle")

}

model Freight {
  id Int @id @default(autoincrement())
  min_weight Int
  distance Int
  status String
  tax Float
  value Float
  freight_registers FreightRegistration[]

  @@map("freight")
}

model FreightRegistration {
  id Int @id @default(autoincrement())
  freight_id Int
  freight Freight @relation(fields: [freight_id], references: [id])
  company_id Int
  company Company @relation(fields: [company_id], references: [id])
  delivery_person_id Int
  delivery_person DeliveryPerson @relation(fields: [delivery_person_id], references: [id])
  status_request String

  @@map("freight_registration")
}

model VehicleRegistration {
  id Int @id @default(autoincrement())
  delivery_person_id Int
  delivery_person DeliveryPerson @relation(fields: [delivery_person_id], references: [id])
  vehicle_id Int
  vehicle Vehicle @relation(fields: [vehicle_id], references: [id])

  @@map("vehicle_registration")
}